/**
 * @file include/GFraMe/gfmParser.h
 * 
 * Generic parser for files generated by the tiled plugin
 */
#ifndef __GFMPARSER_STRUCT__
#define __GFMPARSER_STRUCT__

/** 'Export' the gfmParser struct */
typedef stGFMParser gfmParser;

enum enGFMParserType {
    gfmParserType_none = 0,
    gfmParserType_tileType,
    gfmParserType_tilemap,
    gfmParserType_area,
    gfmParserType_object,
    gfmParserType_max
};
typedef enum enGFMParserType gfmParserType;

#endif /* __GFMPARSER_STRUCT__ */

#ifndef __GFMPARSER_H__
#define __GFMPARSER_H__

#include <GFraMe/gframe.h>
#include <GFraMe/gfmError.h>

gfmRV gfmParser_getNew(gfmParser **ppCtx);
gfmRV gfmParser_free(gfmParser **ppCtx);
gfmRV gfmParser_init(gfmParser *pParser, gfmCtx *pCtx, char *pFilename,
        int filenameLen);
gfmRV gfmParser_clean(gfmParser *pCtx);
gfmRV gfmParser_parseNext(gfmParser *pParser, gfmCtx *pCtx);
gfmRV gfmParser_getType(gfmParserType *pType, gfmParser *pCtx);
gfmRV gfmParser_getPos(int *pX, int *pY, gfmParser *pCtx);
gfmRV gfmParser_getDimensions(int *pWidth, int *pHeight, gfmParser *pCtx);
gfmRV gfmParser_getIntArray(int *pBuffer, gfmParser *pCtx);
gfmRV gfmParser_getNumProperties(int *pNum, gfmParser *pCtx);
gfmRV gfmParser_getProperty(char *pKey, int *pVal, gfmParser *pCtx, int index);

#endif /* __GFMPARSER_H__ */

